#!/usr/bin/env bash
export dir="HELLWRLD"
export name="HELLWRLD"
export file="../src/LEX_lexem.c"
export src='#include "../src/inc.h"
int main(int argc, char **argv) {
    FILE *f;
    if((f = fopen(argv[argc-1], "r")) == NULL) return -1;
    TStructLex *ret = malloc(sizeof(TStructLex));
    ret->lex = NULL;
    ret->type = 0;
    LEX_getLexem(ret, f);
    while(ret->type != TYPE_EOF) {
        printf("%s\n", ret->lex);
        LEX_getLexem(ret, f);
    }
    free(ret);
    fclose(f);
    return 0;
}'
export input="Program TowersOfHanoi(input,output);

Var
   disks:   integer;
    
Procedure Hanoi(source, temp, destination: char;  n: integer);

   begin
   if n > 0 then
      begin
      Hanoi(source, destination, temp, n - 1);
      writeln('Move disk ',n:1,' from peg ',source,' to peg ',destination);
      Hanoi(temp, source, destination, n - 1);
      end;
   end;
    
begin
write('Enter the number of disks: ');
readln(disks);
writeln('Solution:');
Hanoi('A','B','C',disks);
end."
export output="program
towersofhanoi
(
input
,
output
)
;
var
disks
:
integer
;
procedure
hanoi
(
source
,
temp
,
destination
:
char
;
n
:
integer
)
;
begin
if
n
>
0
then
begin
hanoi
(
source
,
destination
,
temp
,
n
-
1
)
;
writeln
(
Move disk 
,
n
:
1
,
 from peg 
,
source
,
 to peg 
,
destination
)
;
hanoi
(
temp
,
source
,
destination
,
n
-
1
)
;
end
;
end
;
begin
write
(
Enter the number of disks: 
)
;
readln
(
disks
)
;
writeln
(
Solution:
)
;
hanoi
(
A
,
B
,
C
,
disks
)
;
end
.
"
export retCode=0
